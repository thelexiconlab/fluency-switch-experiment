strip.text.x = element_text(size =rel(2)),
axis.text = element_text(size =rel(1.5)),
axis.title = element_text(size =rel(2)),
plot.title = element_text(hjust = .5, size = rel(1.2)))
plot_all_lexical %>%
ggplot(aes(x = value, y =mean_response, group = domain, color = domain )) +
geom_point(alpha = 0.1)+
geom_smooth(method = "lm")+
scale_y_continuous(breaks = c("0: cluster"= 0, "1: switch" = 1.0, ".2"= 0.2, ".4" = 0.4,
".6" = 0.6, ".8" = 0.8),
seq(0,1))+
labs(title = "",
x = "mean lexical values",
y = "mean rating of word pairs") +
theme_minimal()+
facet_wrap(~cue)+
scale_color_gdocs()+
theme(plot.background = element_rect(
color = "white"),
strip.text.x = element_text(size =rel(2)),
axis.text = element_text(size =rel(1.5)),
axis.title = element_text(size =rel(2)),
plot.title = element_text(hjust = .5, size = rel(1.2)))
plot_all_lexical %>%
ggplot(aes(x = value, y =mean_response, group = domain, color = domain )) +
geom_point(alpha = 0.1)+
geom_smooth(method = "lm")+
scale_y_continuous(breaks = c("0: cluster"= 0, "1: switch" = 1.0, ".2"= 0.2, ".4" = 0.4,
".6" = 0.6, ".8" = 0.8))+
coord_cartesian(ylim = c(0, 1)) +  # Set Y-axis limits
labs(title = "",
x = "mean lexical values",
y = "mean rating of word pairs") +
theme_minimal()+
facet_wrap(~cue)+
scale_color_gdocs()+
theme(plot.background = element_rect(
color = "white"),
strip.text.x = element_text(size =rel(2)),
axis.text = element_text(size =rel(1.5)),
axis.title = element_text(size =rel(2)),
plot.title = element_text(hjust = .5, size = rel(1.2)))
ggsave('lexical_plot.pdf', units = "in",width = 8, height = 4)
ggsave('lexical_plot.pdf', units = "in",width = 12, height = 4)
plot_all_lexical %>%
ggplot(aes(x = value, y =mean_response, group = domain, color = domain )) +
geom_point(alpha = 0.1)+
geom_smooth(method = "lm")+
scale_y_continuous(breaks = c("0: cluster"= 0, "1: switch" = 1.0, ".2"= 0.2, ".4" = 0.4,
".6" = 0.6, ".8" = 0.8))+
coord_cartesian(ylim = c(0, 1)) +  # Set Y-axis limits
labs(title = "",
x = "mean lexical values",
y = "mean rating of word pairs") +
theme_minimal()+
facet_wrap(~cue)+
scale_color_gdocs()+
theme(plot.background = element_rect(
color = "white"),
strip.text.x = element_text(size =rel(2)),
axis.text = element_text(size =rel(1.5)),
axis.title.x = element_text(size =rel(2)),
axis.title.y = element_text(size =rel(1)),
plot.title = element_text(hjust = .5, size = rel(1.2)))
plot_all_lexical %>%
ggplot(aes(x = value, y =mean_response, group = domain, color = domain )) +
geom_point(alpha = 0.1)+
geom_smooth(method = "lm")+
scale_y_continuous(breaks = c("0: cluster"= 0, "1: switch" = 1.0, ".2"= 0.2, ".4" = 0.4,
".6" = 0.6, ".8" = 0.8))+
coord_cartesian(ylim = c(0, 1)) +  # Set Y-axis limits
labs(title = "",
x = "mean lexical values",
y = "mean ratings\nfor word pairs") +
theme_minimal()+
facet_wrap(~cue)+
scale_color_gdocs()+
theme(plot.background = element_rect(
color = "white"),
strip.text.x = element_text(size =rel(2)),
axis.text = element_text(size =rel(1.5)),
axis.title.x = element_text(size =rel(2)),
axis.title.y = element_text(size =rel(1.5)),
plot.title = element_text(hjust = .5, size = rel(1.2)))
ggsave('lexical_plot.pdf', units = "in",width = 12, height = 4)
rater_data <- trials_agg %>%
ungroup() %>%
mutate(norms_associative = ifelse(is.na(norms_associative), 0, norms_associative),
norms_categorical = ifelse(is.na(norms_categorical), 0, norms_categorical))%>%
filter(!is.na(simdrop))
# Get the list of predictor variables (columns) from the dataframe
rater_predictor_columns <- setdiff(names(rater_data), c("mean_response", "subject", "domain", "response_number",
"current_pair", "num_responses", "cluster"))
# Clean predictor column names in the dataframe
rater_cleaned_data <- rater_data %>%
rename_with(clean_column_names, .cols = rater_predictor_columns)
# Get the list of predictor variables (columns) from the dataframe
rater_predictor_columns <- setdiff(names(rater_cleaned_data), c("mean_response", "subject", "domain", "response_number",
"current_pair", "num_responses", "cluster"))
LEA_data_idio = rbind(LEA_animals, LEA_foods, LEA_occupations)
idio_data = nonfirst_trials %>% filter(subject > 5000) %>%
mutate(current_pair = str_replace(current_pair, "hello", cluster),
subject = as.character(subject)) %>%
group_by(domain, subject, response_number, current_pair, response) %>%
summarize(N = n())%>%
pivot_wider(names_from = response, values_from = N) %>%
rename(cluster_N = "0", switch_N = "1") %>% mutate(across(c(cluster_N, switch_N), ~coalesce(., 0))) %>%
left_join(LEA_data_idio %>% mutate(subject = as.character(subject)))%>%
mutate(idiosyncratic = ifelse(participant_designated_switch == 0, (switch_N / (cluster_N + switch_N)),
(cluster_N / (cluster_N + switch_N)))) %>%
filter(!is.na(idiosyncratic))
total_n = idio_data %>% mutate(N = cluster_N + switch_N) %>% select(subject, N) %>% ungroup() %>% select(subject, N)%>% unique()
mean(total_n$N)
sd(total_n$N)
idio_lexical = idio_data %>%
#mutate(current_pair = str_replace(current_pair, ", ", "-"))%>%
rename(Subject = "subject") %>% mutate(Subject = as.character(Subject)) %>%
left_join(all_lexical %>% mutate(Subject = as.character(Subject))) %>%
mutate(Frequency_Value_scaled = avg_freq/10) %>%
rename(`semantic similarity` = Semantic_Similarity,
`phonological similarity` = Phonological_Similarity,
`word frequency` = Frequency_Value_scaled) %>%
pivot_longer(names_to = "cue", cols = c(`semantic similarity`, `phonological similarity`, `word frequency`))%>%
mutate(cue = as.factor(cue),
cue = fct_relevel(cue, "semantic similarity", "phonological similarity", "word frequency"))
idio_lexical %>%
ggplot(aes(x = value, y =idiosyncratic, group = domain, color = domain )) +
geom_point(alpha = 0.1)+
geom_smooth(method = "lm")+
ylim(0,1)+
labs(title = "",
x = "lexical values",
y = "idiosyncratic score") +
theme_minimal()+
scale_color_gdocs()+
facet_wrap(~cue)+
theme(plot.background = element_rect(
color = "white"),
strip.text.x = element_text(size =rel(2)),
axis.text = element_text(size =rel(1.5)),
axis.title = element_text(size =rel(2)),
plot.title = element_text(hjust = .5, size = rel(1.2)))
idio_lexical %>%
ggplot(aes(x = value, y =idiosyncratic, group = domain, color = domain )) +
geom_point(alpha = 0.1)+
geom_smooth(method = "lm")+
scale_y_continuous(breaks = c("0: no discordance"= 0, "1: high discordance" = 1.0, ".2"= 0.2, ".4" = 0.4,
".6" = 0.6, ".8" = 0.8))+
coord_cartesian(ylim = c(0, 1)) +  # Set Y-axis limits
labs(title = "",
x = "lexical values",
y = "idiosyncratic score") +
theme_minimal()+
scale_color_gdocs()+
facet_wrap(~cue)+
theme(plot.background = element_rect(
color = "white"),
strip.text.x = element_text(size =rel(2)),
axis.text = element_text(size =rel(1.5)),
axis.title = element_text(size =rel(2)),
plot.title = element_text(hjust = .5, size = rel(1.2)))
ggsave('idio_lexical_plot.pdf', units = "in",width = 12, height = 4)
exploratory_data = LEA_cleaned_data %>%
mutate(subject = as.character(subject)) %>%
select(domain, subject, cluster, participant_designated_switch, response_number ) %>%
left_join((trials_agg %>% select(domain, subject, cluster, mean_response, response_number ))) %>%
filter(!is.na(mean_response))
exploratory_lm = glmer(data = exploratory_data, participant_designated_switch ~ mean_response + (mean_response|subject),
family = binomial)
summary(exploratory_lm)
MuMIn::r.squaredGLMM(exploratory_lm)
rater_model_results <- rater_cleaned_data %>%
group_by(domain) %>%
summarise(
model = map(setNames(rater_predictor_columns, rater_predictor_columns),
~ fit_model(df = cur_data(), column = .x, type = "lmer", dv = "mean_response",
var_cutoff = .015))
)
View(rater_model_results)
rater_model_results_unnested = rater_model_results %>% unnest() %>%
mutate(Predictor = ifelse(Predictor == "norms_associative", "associative",
ifelse(Predictor == "norms_categorical", "categorical", Predictor))) %>%
separate(Predictor, sep = "_", into = c("Predictor", "param1", "p1_0", "p1_val",
"param2", "p2_0", "p2_val", "param3", "p3_0", "p3_val"))
View(rater_model_results_unnested)
getwd()
write.csv(rater_model_results_unnested, file = "rater_model_results.csv", row.names = FALSE)
best_rating_models = rater_model_results_unnested %>%
filter(Predictor != "exp")%>%
group_by(domain, Predictor) %>%
slice_max(R_squared) %>%
arrange(domain, desc(R_squared))
multimodaldelta_models_rater = rater_model_results_unnested %>% filter(Predictor == "multimodaldelta") %>%
unite("alpha", p1_0, p1_val, sep = ".", remove = FALSE) %>%
unite("rise", p2_0, p2_val, sep = ".", remove = FALSE) %>%
unite("fall", p3_0, p3_val, sep = ".", remove = FALSE)%>%
mutate(alpha = as.numeric(alpha),
rise = as.numeric(rise), fall = as.numeric(fall))
View(multimodaldelta_models_rater)
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
geom_tile(color = 'black', stat = 'identity', size = 1.1,
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_fill_gradient2(midpoint = 0.15) +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
geom_tile(color = 'black', stat = 'identity', size = 1.1,
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_fill_gradient2(midpoint = 0.2) +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
geom_tile(color = 'black', stat = 'identity', size = 1,
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_fill_gradient2(midpoint = 0.2) +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
geom_tile(color = 'black', stat = 'identity',
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_fill_gradient2(midpoint = 0.2) +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
View(multimodaldelta_models_rater)
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)#+
unique(multimodaldelta_models_rater$rise)
unique(multimodaldelta_models_rater$fall)
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
# geom_tile(color = 'black', stat = 'identity',
#             data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_fill_gradient2(midpoint = 0.2) +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
geom_tile(color = 'black', stat = 'identity',
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_fill_gradient2(midpoint = 0.2) +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
geom_tile(color = 'black', stat = 'identity',
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_fill_gradient2(midpoint = 0.2) +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
geom_tile(color = 'black', stat = 'identity', size = 0.5,
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_fill_gradient2(midpoint = 0.2) +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
multimodaldelta_models_rater %>% group_by(domain) %>% filter(R_squared == max(R_squared)
)
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
geom_tile(color = 'black', stat = 'identity', size = 0.5, width = 1, height = 1,
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_fill_gradient2(midpoint = 0.2) +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
geom_tile(color = 'black', stat = 'identity', size = 0.5, width = 0.25, height = 0.25,
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_fill_gradient2(midpoint = 0.2) +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
ggsave('multimodal_heatmap_rater.pdf', units = 'in', width = 10, height = 4)
multimodaldelta_models %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
geom_tile(color = 'black', stat = 'identity', size = 1.1,
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_fill_gradient2(midpoint = 0.15) +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
multimodaldelta_models = individual_model_results %>% filter(Predictor == "multimodaldelta") %>%
unite("alpha", p1_0, p1_val, sep = ".", remove = FALSE) %>%
unite("rise", p2_0, p2_val, sep = ".", remove = FALSE) %>%
unite("fall", p3_0, p3_val, sep = ".", remove = FALSE)%>%
mutate(alpha = paste0("alpha=", as.numeric(alpha)),
rise = as.numeric(rise), fall = as.numeric(fall))
multimodaldelta_models %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
geom_tile(color = 'black', stat = 'identity', size = 1.1,
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_fill_gradient2(midpoint = 0.15) +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
ggsave('multimodal_heatmap.pdf', units = 'in', width = 10, height = 4)
multimodaldelta_models %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
geom_tile(color = 'black', stat = 'identity', size = 1, height = 0.25, width = 0.25,
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_fill_gradient2(midpoint = 0.15) +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
ggsave('multimodal_heatmap.pdf', units = 'in', width = 10, height = 4)
ggsave('multimodal_heatmap_participant.pdf', units = 'in', width = 10, height = 4)
multimodaldelta_models_rater = rater_model_results_unnested %>% filter(Predictor == "multimodaldelta") %>%
unite("alpha", p1_0, p1_val, sep = ".", remove = FALSE) %>%
unite("rise", p2_0, p2_val, sep = ".", remove = FALSE) %>%
unite("fall", p3_0, p3_val, sep = ".", remove = FALSE)%>%
mutate(alpha = paste0("alpha=", as.numeric(alpha)),
rise = as.numeric(rise), fall = as.numeric(fall))
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
geom_tile(color = 'black', stat = 'identity', size = 1, width = 0.25, height = 0.25,
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_fill_gradient2(midpoint = 0.2) +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
ggsave('multimodal_heatmap_rater.pdf', units = 'in', width = 10, height = 4)
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
geom_tile(color = 'black', stat = 'identity', size = 1, width = 0.25, height = 0.25,
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_fill_gradient2(midpoint = 0.2, high = "red", low = "blue") +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
geom_tile(color = 'black', stat = 'identity', size = 1, width = 0.25, height = 0.25,
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_fill_gradient2(midpoint = 0.2, high = "green", low = "blue") +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
geom_tile(color = 'black', stat = 'identity', size = 1, width = 0.25, height = 0.25,
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_fill_gradient2(midpoint = 0.2, high = "green", low = "darkslategray") +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
multimodaldelta_models_rater %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
geom_tile(color = 'black', stat = 'identity', size = 1, width = 0.25, height = 0.25,
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_fill_gradient2(midpoint = 0.2, high = "darkgreen", low = "darkslategray") +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
ggsave('multimodal_heatmap_rater.pdf', units = 'in', width = 10, height = 4)
multimodaldelta_models %>%
ggplot(aes(x = rise, y = fall, fill = R_squared)) +
geom_tile()+
facet_grid(domain~alpha)+
scale_x_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
scale_y_continuous(breaks = c("0"= 0.0, ".25"=0.25, ".5" = 0.50,".75" = 0.75, "1" = 1.0))+
geom_tile(color = 'black', stat = 'identity', size = 1, height = 0.25, width = 0.25,
data = . %>% group_by(domain) %>% filter(R_squared == max(R_squared)))+
scale_fill_gradient2(midpoint = 0.15, high = "darkgreen", low = "darkslategray") +
theme_few() +
labs(y = "fall parameter", x = "rise parameter",
fill  =bquote(R^2 ~ "")) +
theme(aspect.ratio = 1,
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8))
ggsave('multimodal_heatmap_participant.pdf', units = 'in', width = 10, height = 4)
